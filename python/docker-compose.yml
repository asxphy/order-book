version: "3.9"

services:
  kafka:
    image: bitnami/kafka:3.7.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:  # ✅ wait until Kafka is actually ready
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-init:
    image: bitnami/kafka:3.7.0
    depends_on:
      kafka:
        condition: service_healthy   # ✅ only run once Kafka is healthy
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      echo 'Waiting for Kafka to be ready...' &&
      kafka-topics.sh --create --if-not-exists --topic orders.in --partitions 12 --replication-factor 1 --bootstrap-server kafka:9092 &&
      kafka-topics.sh --create --if-not-exists --topic events.out --partitions 12 --replication-factor 1 --bootstrap-server kafka:9092 &&
      echo 'Topics created successfully!'
      "

  engine:
    build: ./
    depends_on:
      kafka-init:
        condition: service_completed_successfully  # ✅ wait until topics are created
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
      - ENGINE_GROUP=matching-engine
      - ORDERS_IN=orders.in
      - EVENTS_OUT=events.out
    deploy:
      replicas: 1   # scale up later if needed

  producer:
    image: python:3.12-slim-trixie
    depends_on:
      engine:
        condition: service_started   # ✅ run after engine starts
    working_dir: /app
    volumes:
      - ./producer:/app
    command: bash -c "pip install confluent-kafka && python producer.py"
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092

volumes:
  kafka-data:
